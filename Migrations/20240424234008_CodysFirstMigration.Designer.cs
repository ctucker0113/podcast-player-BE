// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace podcast_player_BE.Migrations
{
    [DbContext(typeof(PodcastPlayerDbContext))]
    [Migration("20240424234008_CodysFirstMigration")]
    partial class CodysFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("podcast_player_BE.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerID")
                        .HasColumnType("integer");

                    b.Property<int>("PodcastQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "favorites.jpg",
                            OwnerID = 1,
                            PodcastQuantity = 3,
                            Title = "Favorites"
                        },
                        new
                        {
                            Id = 2,
                            Image = "toppicks.jpg",
                            OwnerID = 2,
                            PodcastQuantity = 2,
                            Title = "Top Picks"
                        },
                        new
                        {
                            Id = 3,
                            Image = "morningdrive.jpg",
                            OwnerID = 3,
                            PodcastQuantity = 1,
                            Title = "Morning Drive"
                        },
                        new
                        {
                            Id = 4,
                            Image = "inspiration.jpg",
                            OwnerID = 1,
                            PodcastQuantity = 2,
                            Title = "Inspiration"
                        },
                        new
                        {
                            Id = 5,
                            Image = "dailycommute.jpg",
                            OwnerID = 2,
                            PodcastQuantity = 2,
                            Title = "Daily Commute"
                        });
                });

            modelBuilder.Entity("podcast_player_BE.Models.PlaylistPodcast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaylistId")
                        .HasColumnType("integer");

                    b.Property<int>("PodcastId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PlaylistPodcasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlaylistId = 1,
                            PodcastId = 1
                        },
                        new
                        {
                            Id = 2,
                            PlaylistId = 1,
                            PodcastId = 2
                        },
                        new
                        {
                            Id = 3,
                            PlaylistId = 1,
                            PodcastId = 3
                        },
                        new
                        {
                            Id = 4,
                            PlaylistId = 2,
                            PodcastId = 4
                        },
                        new
                        {
                            Id = 5,
                            PlaylistId = 2,
                            PodcastId = 5
                        },
                        new
                        {
                            Id = 6,
                            PlaylistId = 3,
                            PodcastId = 6
                        },
                        new
                        {
                            Id = 7,
                            PlaylistId = 4,
                            PodcastId = 7
                        },
                        new
                        {
                            Id = 8,
                            PlaylistId = 4,
                            PodcastId = 8
                        },
                        new
                        {
                            Id = 9,
                            PlaylistId = 5,
                            PodcastId = 9
                        },
                        new
                        {
                            Id = 10,
                            PlaylistId = 5,
                            PodcastId = 10
                        });
                });

            modelBuilder.Entity("podcast_player_BE.Models.Podcast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Podcasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Joe Rogan",
                            Description = "Conversations with interesting people.",
                            Image = "jre.jpg",
                            Length = 120,
                            Name = "The Joe Rogan Experience"
                        },
                        new
                        {
                            Id = 2,
                            Author = "TED",
                            Description = "Exploring big ideas through powerful talks.",
                            Image = "ted.jpg",
                            Length = 60,
                            Name = "TED Radio Hour"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Sarah Koenig",
                            Description = "Investigative journalism series.",
                            Image = "serial.jpg",
                            Length = 45,
                            Name = "Serial"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Tim Ferriss",
                            Description = "Interviews with top performers.",
                            Image = "timferriss.jpg",
                            Length = 90,
                            Name = "The Tim Ferriss Show"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Jad Abumrad & Robert Krulwich",
                            Description = "Science, philosophy, and storytelling.",
                            Image = "radiolab.jpg",
                            Length = 75,
                            Name = "Radiolab"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Josh Clark & Chuck Bryant",
                            Description = "Explaining how stuff works.",
                            Image = "sysk.jpg",
                            Length = 50,
                            Name = "Stuff You Should Know"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Stephen Dubner",
                            Description = "Exploring the hidden side of everything.",
                            Image = "freakonomics.jpg",
                            Length = 55,
                            Name = "Freakonomics Radio"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Guy Raz",
                            Description = "Conversations with entrepreneurs.",
                            Image = "hibt.jpg",
                            Length = 70,
                            Name = "How I Built This"
                        },
                        new
                        {
                            Id = 9,
                            Author = "NPR",
                            Description = "Understanding the economy.",
                            Image = "planetmoney.jpg",
                            Length = 40,
                            Name = "Planet Money"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Ira Glass",
                            Description = "Telling stories of everyday life.",
                            Image = "tal.jpg",
                            Length = 80,
                            Name = "This American Life"
                        });
                });

            modelBuilder.Entity("podcast_player_BE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Taylor Seager",
                            Uid = "user1"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Felicia Mings",
                            Uid = "user2"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Cody Tucker",
                            Uid = "user3"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Lucas Martin",
                            Uid = "user4"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
